ExpT <- read.table(promediosCandi.txt)
ExpT <- read.table('promediosCandi.txt')
View(ExpT)
colnames(ExpT) <- sub('X', '', colnames(ExpT))
ExpT <- read.table('promediosCandi.txt')
colnames(ExpT) <-as.numeric( sub('X', '', colnames(ExpT)) )
ExpTT <- read.table('SSexp.txt')
ExpSS <- read.table('SSexp.txt')
rm(ExpTT)
View(ExpSS)
ExpSS <- read.table('SSexp.txt')
colnames(ExpSS) <-as.numeric( sub('X', '', colnames(ExpSS)) )
View(ExpSS)
ExpSS <- read.table('SSexp.txt')
colnames(ExpSS) <-as.numeric( sub('X', '', colnames(ExpSS)) )
ExpSS <- ExpSS[,-1869]
data <- rbind(ExpT,ExpSS)
View(data)
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l')
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l')
par(new = T)
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.15))
par(new = T)
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.15),
xlim =  c(1700, 400))
par(new = T)
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.3),
xlim =  c(1700, 400))
par(new = T)
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.35),
xlim =  c(1700, 400))
par(new = T)
}
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.35),
xlim =  c(1700, 400),
ylab = 'absorbance (a.u.)',
xlab = 'wave number (cm-1)' )
par(new = T)
}
install.packages(rmdformats)
install.packages('rmdformats')
?rmdformats::downcute
colnames(data)[c(1,676)]
data <- data[, 1:676]
dd <- dist(data, method = "euclidean")
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(x, labels = NULL, hang = 0.1,
main = "Cluster dendrogram", sub = NULL,
xlab = NULL, ylab = "Height", ...)
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc, labels = NULL, hang = 0.1,
main = "Cluster dendrogram", sub = NULL,
xlab = NULL, ylab = "Height", ...)
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc, labels = NULL, hang = 0.1,
main = "Cluster dendrogram", sub = NULL,
xlab = NULL, ylab = "Height")
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc,
hang = -1,
main = "Cluster dendrogram",
xlab = 'sample',
ylab = "Height",
cex = 0.6)
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc,
hang = 0,
main = "Cluster dendrogram",
xlab = 'sample',
ylab = "Height",
cex = 0.6)
dd <- dist(data, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc,
main = "Cluster dendrogram",
xlab = 'sample',
ylab = "Height",
cex = 0.6)
data <- data[, 1:676]
wn <- colnames(data[1:676])
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
library(hyperSpec)
data <- data[, 1:676]
wn <- as.numeric( colnames(data[1:676]))
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:71])
corregido2 <- as.data.frame(corregido[,1])
dd <- dist(corregido2, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc,
main = "Cluster dendrogram",
xlab = 'sample',
ylab = "Height",
cex = 0.6)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
plotScores(mdaPCA$res$cal, show.labels = TRUE)
pca.bl <- prcomp(corregido2, scale =F, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord <- pca$x
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord <- pca.bl$x
coord <- pca.bl$x
coord <- pca.bl$x
install.packages('factoextra')
df <- corregido2
library(factoextra)
df <- corregido2
library(factoextra)
res.hk <-hkmeans(df, 4)
library(factoextra)
df <- corregido2
library(factoextra)
res.hk <-hkmeans(df, 4)
library(factoextra)
df <- corregido2
library(factoextra)
res.hk <-hkmeans(df, 4)
names(res.hk)
res.hk
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
?fviz_cluster
?ggplot
options(ggrepel.max.overlaps = Inf)
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_dark())
fviz_cluster(res.hk, palette = "jco", repel = TRUE,
ggtheme = theme_classic())
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_classic(),
labelsize = 0.1)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 0.1)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal()
)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal()
labelsize = 12)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 12)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 1)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 3)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 5)
View(data)
?hkmeans
library(factoextrea)
library(factoextra)
?hkmeans
library(prospectr)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
ExpT <- read.table('promediosCandi.txt')
colnames(ExpT) <-as.numeric( sub('X', '', colnames(ExpT)) )
ExpSS <- read.table('SSexp.txt')
colnames(ExpSS) <-as.numeric( sub('X', '', colnames(ExpSS)) )
ExpSS <- ExpSS[,-1869]
data <- rbind(ExpT,ExpSS)
for(i in 1:71){
plot(colnames(data),
data[i,],
type = 'l',
ylim = c(0,0.35),
xlim =  c(1700, 400),
ylab = 'absorbance (a.u.)',
xlab = 'wave number (cm-1)' )
par(new = T)
}
colnames(data)[c(1,676)]
data <- data[, 1:676]
wn <- as.numeric( colnames(data[1:676]))
library(hyperSpec)
spc <- new('hyperSpec', spc = data, wavelength = wn)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:71])
corregido2 <- as.data.frame(corregido[,1])
library(factoextra)
df <- corregido2
library(factoextra)
res.hk <-hkmeans(df, 4)
names(res.hk)
options(ggrepel.max.overlaps = Inf)
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
fviz_cluster(res.hk,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 5)
dd <- dist(corregido2, method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc,
main = "Cluster dendrogram",
xlab = 'sample',
ylab = "Height",
cex = 0.6)
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord <- pca.bl$x
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
rownames(sg) <- rownames(corregido2)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
rownames(sg) <- rownames(corregido2)
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-1e-04,1e-04),
type = 'l',
col = class[i])
par(new = T)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
rownames(sg) <- rownames(corregido2)
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-1e-04,1e-04),
type = 'l',
col = class[i])
par(new = T)
}
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
rownames(sg) <- rownames(corregido2)
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-1e-04,1e-04),
type = 'l',
col = 1)
par(new = T)
}
pca.bl.2d <- prcomp(sg, scale=T, center = T)
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl[,1],
coord.bl[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = 1
)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = 1
)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
vp.bl.2d <- (pca.bl.2d$sdev)^2
varianza.bl.2d <- round(vp.bl.2d/sum(vp.bl.2d)*100, 2)
varianza.bl.2d
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = 1
)
res.hk$cluster
pca.bl.2d <- prcomp(sg, scale=T, center = T)
vp.bl.2d <- (pca.bl.2d$sdev)^2
varianza.bl.2d <- round(vp.bl.2d/sum(vp.bl.2d)*100, 2)
varianza.bl.2d
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.2d[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.2d[2]), '%'),
col = res.hk$cluster[i]
)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
vp.bl.2d <- (pca.bl.2d$sdev)^2
varianza.bl.2d <- round(vp.bl.2d/sum(vp.bl.2d)*100, 2)
varianza.bl.2d
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.2d[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.2d[2]), '%'),
col = res.hk$cluster
)
library(factoextra)
df.sg <- sg
res.hk.sg <-hkmeans(df.sg, 4)
names(res.hk.sg)
fviz_dend(res.hk.sg, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
options(ggrepel.max.overlaps = Inf)
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
vp.bl.2d <- (pca.bl.2d$sdev)^2
varianza.bl.2d <- round(vp.bl.2d/sum(vp.bl.2d)*100, 2)
varianza.bl.2d
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.2d[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.2d[2]), '%'),
col = res.hk.sg$cluster
)
fviz_cluster(res.hk.sg,
palette = "jco",
repel = TRUE,
ggtheme = theme_minimal(),
labelsize = 5)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
vp.bl.2d <- (pca.bl.2d$sdev)^2
varianza.bl.2d <- round(vp.bl.2d/sum(vp.bl.2d)*100, 2)
varianza.bl.2d
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.2d[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.2d[2]), '%'),
col = res.hk.sg$cluster
)
abline(h = 0, v =  0, lty=2)

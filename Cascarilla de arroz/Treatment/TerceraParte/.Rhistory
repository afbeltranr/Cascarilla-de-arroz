y2<- y[res.hk$cluster == 2]
z2<- z[res.hk$cluster == 2]
ellipse(c(mean(x2),mean(y2)),
cov(cbind(x2,y2)),
radius= sqrt(qchisq(.95, df =2)),
col=2,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x3<- x[res.hk$cluster == 3]
y3<- y[res.hk$cluster == 3]
z3<- z[res.hk$cluster == 3]
ellipse(c(mean(x3),mean(y3)),
cov(cbind(x3,y3)),
radius= sqrt(qchisq(.95, df =2)),
col=3,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
df <- sg
library(factoextra)
res.hk <-hkmeans(df,
4,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE, ylim = c(-5e-05,2e-04))
df <- sg
library(factoextra)
res.hk <-hkmeans(df,
4,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE, ylim = c(-5e-05,2e-04))
View(sg)
length(rownames(sg))
rownames(corregido2)
library(hyperSpec)
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:31])
corregido2 <- as.data.frame(corregido[,1])
View(Rango1)
nombres <- list.files(, pattern = 'CSV')
nombres
(length(nombres)-1)/3
nombres[46]
nombres <- nombres[-46]
data <- lapply(nombres, read.csv, header = FALSE)
str(data[[1]])
wavenumber <- data[[1]][,1]
data2 <- lapply(data, '[', 2)
data2 <- as.data.frame(data2)
dim(data2)
names(data2) <- nombres
datat <- t(data2)
colnames(datat) <- wavenumber
set.seed(0)
searchGrid <- expand.grid(Sampling = c('UF1',
'UF2',
'UF3',
'UF4',
'UF5',
'LF1',
'LF2',
'LF3',
'LF4',
'LF5'),
millingTime = c('A',
'B'),
brine = c('SS',
''))
# knitr::kable(searchGrid)
rownames.prom <- character(40)
for(i in 1:40){
rownames.prom[i] <- paste(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
rownames.prom
prom <- matrix(,
ncol = ncol(datat),
nrow = nrow(datat)/3)
index <- vector('list',40)
for(i in 1:40){
index[[i]] <- c(
which(
grepl(
paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
),
rownames(datat), perl = T              )
)
)
}
searchGrid[1,]
index[[1]]
rownames(datat)[index[[1]]]
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
rownames(prom) <- rownames.prom
colnames(prom) <- wavenumber
NaCl <- vector('character', length(rownames(prom)))
for(i in 1:40){
if(grepl('SS', rownames(prom)[i],perl =T)){NaCl[i]<- 'red'}
else{NaCl[i]<- 'black'}
}
indexSS <- vector('logical',40)
indexSS<-which(grepl('SS', rownames(prom),perl =T))
for(i in 1:40){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(3900,400),
ylim = c(0,0.12),
type = 'l',
col = NaCl[i])
par(new = T)
}
colnames(prom)[c(1,676)]
Rango1 <- prom[,1:676]
wn.Rango1 <- wavenumber[1:676]
View(Rango1)
library(hyperSpec)
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:31])
corregido2 <- as.data.frame(corregido[,1])
library(hyperSpec)
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:40])
corregido2 <- as.data.frame(corregido[,1])
win.graph()
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
# for (i in 1:31){
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
# }
# colnames(sg) <- colnames( savitzkyGolay(X = corregido2[1,]
#                         ,m = 2,
#                         p = 3,
#                         w = w2+1,
#                         delta.wav=2))
rownames(sg) <- rownames(corregido2)
# win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-5e-05,5e-05),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
df <- sg
library(factoextra)
res.hk <-hkmeans(df,
4,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE, ylim = c(-5e-05,2e-04))
pca.bl.sg <- prcomp(sg, scale =T, center = T)
vp.bl.sg <- (pca.bl.sg$sdev)^2
varianza.bl.sg <- round(vp.bl.sg/sum(vp.bl.sg)*100, 2)
varianza.bl.sg
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = res.hk$cluster,
xlim = c(-20,90)
)
abline(h = 0, v= 0, lty = 2)
x<- coord.bl.sg[,1]
y<- coord.bl.sg[,2]
z<- coord.bl.sg[,3]
x1<- x[res.hk$cluster == 1]
y1<- y[res.hk$cluster == 1]
z1<- z[res.hk$cluster == 1]
library(car)
ellipse(c(mean(x1),mean(y1)),
cov(cbind(x1,y1)),
radius= sqrt(qchisq(.95, df =2)),
col=1,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x2<- x[res.hk$cluster == 2]
y2<- y[res.hk$cluster == 2]
z2<- z[res.hk$cluster == 2]
ellipse(c(mean(x2),mean(y2)),
cov(cbind(x2,y2)),
radius= sqrt(qchisq(.95, df =2)),
col=2,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x3<- x[res.hk$cluster == 3]
y3<- y[res.hk$cluster == 3]
z3<- z[res.hk$cluster == 3]
ellipse(c(mean(x3),mean(y3)),
cov(cbind(x3,y3)),
radius= sqrt(qchisq(.95, df =2)),
col=3,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
# text(coord.bl.sg[,1],
#      coord.bl.sg[,2],
#      rownames(coord.bl.sg),
#      pos = 4,
#      cex = 0.5)
win.graph()
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
axes=F,
xlab = '',
ylab = '',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
axis(1)
axis(2)
box()
title(main="",
xlab=expression(paste("Wave number (cm"^"-1",")")),
ylab="Absorbance (a.u.)",
)
rect(1065,0,1025,1, col= rgb(0.302,0.686,0.29,alpha=0.2), border = NA)
rect(465,0,445,1, col= rgb(0.302,0.686,0.29,alpha=0.2), border = NA)
rect(789,0,809,1, col= rgb(0.302,0.686,0.29,alpha=0.2), border = NA)
rect(1635,0,1655,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
rect(1500,0,1520,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
rect(1450,0,1465,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
rect(1410,0,1425,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
rect(1360,0,1380,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
rect(1310,0,1330,1, col= rgb(0.216,0.494,0.722,0.29,alpha=0.2), border = NA)
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1,
bg = 'white')
win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
axes=F,
xlab = '',
ylab = '',
xlim = c(1700,400),
ylim = c(-4.5e-05,4e-05),
type = 'l',
col = NaCl[i])
par(new = T)
}
axis(1)
axis(2)
box()
title(main="",
xlab=expression(paste("Wave number (cm"^"-1",")")),
ylab="second derivative of absorbance (a.u.)",
)
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
win.graph()
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = res.hk$cluster,
xlim = c(-20,90)
)
abline(h = 0, v= 0, lty = 2)
x<- coord.bl.sg[,1]
y<- coord.bl.sg[,2]
z<- coord.bl.sg[,3]
x1<- x[res.hk$cluster == 1]
y1<- y[res.hk$cluster == 1]
z1<- z[res.hk$cluster == 1]
library(car)
ellipse(c(mean(x1),mean(y1)),
cov(cbind(x1,y1)),
radius= sqrt(qchisq(.95, df =2)),
col=1,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x2<- x[res.hk$cluster == 2]
y2<- y[res.hk$cluster == 2]
z2<- z[res.hk$cluster == 2]
ellipse(c(mean(x2),mean(y2)),
cov(cbind(x2,y2)),
radius= sqrt(qchisq(.95, df =2)),
col=2,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x3<- x[res.hk$cluster == 3]
y3<- y[res.hk$cluster == 3]
z3<- z[res.hk$cluster == 3]
ellipse(c(mean(x3),mean(y3)),
cov(cbind(x3,y3)),
radius= sqrt(qchisq(.95, df =2)),
col=3,
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
df <- sg
library(factoextra)
res.hk <-hkmeans(df,
4,
hc.metric =  'minkowski')
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE, ylim = c(-5e-05,2e-04))
win.graph()
fviz_dend(res.hk, cex = 0.6, palette = "jco",
rect = TRUE, rect_border = "jco", rect_fill = TRUE, ylim = c(-5e-05,2e-04))
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord.bl <- pca.bl$x
library(RColorBrewer)
for(i in 1:2){
plot(as.numeric(colnames(corregido2)),
loadings[,i],
type = 'l',
ylim = c(-0.15,0.2),
xlim = c(1700,400),
ylab = 'PC Loadings',
xlab = expression(paste("Wave number (cm"^"-1",")")),
col= brewer.pal(3,'Dark2')[i],
)
par(new =T)
}
t
loadings <- pca.bl$rotation
library(RColorBrewer)
for(i in 1:2){
plot(as.numeric(colnames(corregido2)),
loadings[,i],
type = 'l',
ylim = c(-0.15,0.2),
xlim = c(1700,400),
ylab = 'PC Loadings',
xlab = expression(paste("Wave number (cm"^"-1",")")),
col= brewer.pal(3,'Dark2')[i],
)
par(new =T)
}
abline(h=0)
legend('topleft',
c('PC1','PC2'),
col = brewer.pal(3,'Dark2')[1:2],
lty = 1,
lw = 2)
pca.bl <- prcomp(corregido2, scale =T, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord.bl <- pca.bl$x
loadings <- pca.bl$rotation
library(RColorBrewer)
for(i in 1:2){
plot(as.numeric(colnames(corregido2)),
loadings[,i],
type = 'l',
ylim = c(-0.15,0.2),
xlim = c(1700,400),
ylab = 'PC Loadings',
xlab = expression(paste("Wave number (cm"^"-1",")")),
col= brewer.pal(3,'Dark2')[i],
)
par(new =T)
}
abline(h=0)
legend('topleft',
c('PC1','PC2'),
col = brewer.pal(3,'Dark2')[1:2],
lty = 1,
lw = 2)
win.graph()
library(RColorBrewer)
for(i in 1:2){
plot(as.numeric(colnames(corregido2)),
loadings[,i],
type = 'l',
ylim = c(-0.15,0.2),
xlim = c(1700,400),
ylab = 'PC Loadings',
xlab = expression(paste("Wave number (cm"^"-1",")")),
col= brewer.pal(3,'Dark2')[i],
)
par(new =T)
}
abline(h=0)
legend('topleft',
c('PC1','PC2'),
col = brewer.pal(3,'Dark2')[1:2],
lty = 1,
lw = 2)

nombres <- list.files(, pattern = 'CSV')
nombres
length(nombres)
length(nombres)/3
(length(nombres)-1)/3
nombres[41]
nombres[46]
data <- lapply(nombres, read.csv, header = FALSE)
str(data[[1]])
wavenumber <- data[[1]][,1]
data2 <- lapply(data, '[', 2)
data2 <- as.data.frame(data2)
dim(data2)
names(data2) <- nombres
View(data2)
nombres <- nombres[-46]
data <- lapply(nombres, read.csv, header = FALSE)
str(data[[1]])
wavenumber <- data[[1]][,1]
data2 <- lapply(data, '[', 2)
data2 <- as.data.frame(data2)
dim(data2)
names(data2) <- nombres
datat <- t(data2)
View(datat)
View(datat)
searchGrid <- expand.grid(Sampling = c('UF1',
'UF2',
'UF3',
'UF4',
'UF5',
'LF1',
'LF2',
'LF3',
'LF4',
'LF5'),
millingTime = c('A',
'B'),
brine = c('SS',
''))
View(searchGrid)
set.seed(0)
searchGrid <- expand.grid(Sampling = c('UF1',
'UF2',
'UF3',
'UF4',
'UF5',
'LF1',
'LF2',
'LF3',
'LF4',
'LF5'),
millingTime = c('A',
'B'),
brine = c('SS',
''))
knitr::kable(searchGrid)
rownames.prom <- character(40)
for(i in 1:40){
rownames.prom[i] <- paste(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
for(i in 1:40){
rownames.prom[i] <- paste(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
rownames.prom
for(i in 1:40){
rownames.prom[i] <- paste0(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
rownames.prom
for(i in 1:40){
rownames.prom[i] <- paste(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
rownames.prom
prom <- matrix(,
ncol = ncol(datat),
nrow = nrow(datat)/3)
View(prom)
index <- vector('list',40)
for(i in 1:40){
index[[i]] <- c(
which(
grepl(
paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
)
rownames(datat), perl = T              )
for(i in 1:40){
index[[i]] <- c(
which(
grepl(
paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
),
rownames(datat), perl = T              )
)
)
}
for(i in 1:40){
index[[i]] <- c(
which(
grepl(
paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
),
rownames(datat), perl = T              )
)
)
}
View(index)
rownames(datat)[index[[1]]]
searchGrid[1,]
index[[1]]
rownames(datat)[index[[1]]]
for(j in 1:length(colnames(datat))){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
View(prom)
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
View(index)
View(prom)
length(colnames(datat))
View(datat)
colnames(datat) <- wavenumber
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
View(prom)
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
rownames(prom) <- rownames.prom
colnames(prom) <- wavenumber
View(prom)
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.18),
type = 'l')
par(new = T)
}
colnames(prom)[c(1,676)]
colnames(prom)[c(1,676)]
Rango1 <- prom[,1:676]
wn.Rango1 <- wavenumber[1:676]
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
library(hyperSpec)
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:31])
corregido2 <- as.data.frame(corregido[,1])
pca.bl <- prcomp(corregido2, scale =F, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
library(mdatools)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = FALSE)
summary(mdaPCA)
plot(mdaPCA)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = FALSE)
summary(mdaPCA)
win.graph()
plot(mdaPCA)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = FALSE)
summary(mdaPCA)
win.graph()
plot(mdaPCA, show.labels = TRUE)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = FALSE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = F, scale = TRUE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
readline('cual')
}
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
which(prom[,1])>0.2
which(prom[,1]>0.2)
plot(wavenumber,
prom[23,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[23,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,15),
type = 'l')
par(new = T)
}
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[23,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.15),
type = 'l')
par(new = T)
}
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.15),
type = 'l')
par(new = T)
}
which(prom[,1]>0.2)
index[23]
index[[23]]
rownames(datat)[c(22,23,24)]
rownames(datat)[c(52,53,54)]
index[[28]]
rownames(prom)[28]
index[[28]]
index[[28]]
rownames(prom)[28]
rownames(datat)[c(7,8,9)]
index[[23]]
rownames(prom)[23]
index[[23]]
rownames(prom)[23]
rownames(datat)[c(22,23,24)]
for(i in 1:3){
plot(wavenumber,
datat[index[23][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.15),
type = 'l')
par(new = T)
)
for(i in 1:3){
plot(wavenumber,
datat[index[23][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.15),
type = 'l')
par(new = T)
}
for(i in 1:3){
plot(wavenumber,
datat[index[[23]][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.15),
type = 'l')
par(new = T)
}
for(i in 1:3){
plot(wavenumber,
datat[index[[23]][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
# ylim = c(0,0.15),
type = 'l')
par(new = T)
}
for(i in 1:3){
plot(wavenumber,
datat[index[[23]][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
?write.table
write.table(prom, 'SSexp.txt' )
write.table(prom, 'SSexp.txt' , sep = '\t')
prom[,1869]
prom <- prom[,-1869]
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
rm(rom)
rm(prom)
nombres <- list.files(, pattern = 'CSV')
nombres
(length(nombres)-1)/3
nombres[46]
nombres <- nombres[-46]
data <- lapply(nombres, read.csv, header = FALSE)
str(data[[1]])
wavenumber <- data[[1]][,1]
data2 <- lapply(data, '[', 2)
data2 <- as.data.frame(data2)
dim(data2)
names(data2) <- nombres
datat <- t(data2)
colnames(datat) <- wavenumber
set.seed(0)
searchGrid <- expand.grid(Sampling = c('UF1',
'UF2',
'UF3',
'UF4',
'UF5',
'LF1',
'LF2',
'LF3',
'LF4',
'LF5'),
millingTime = c('A',
'B'),
brine = c('SS',
''))
# knitr::kable(searchGrid)
rownames.prom <- character(40)
for(i in 1:40){
rownames.prom[i] <- paste(searchGrid[i,1],
searchGrid[i,2],
searchGrid[i,3])
}
rownames.prom
prom <- matrix(,
ncol = ncol(datat),
nrow = nrow(datat)/3)
index <- vector('list',40)
for(i in 1:40){
index[[i]] <- c(
which(
grepl(
paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
),
rownames(datat), perl = T              )
)
)
}
searchGrid[1,]
index[[1]]
rownames(datat)[index[[1]]]
for(j in 1:length(colnames(datat))){
for(i in 1:40){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
rownames(prom) <- rownames.prom
colnames(prom) <- wavenumber
colnames(prom)[c(1,676)]
write.table(prom, 'SSexp.txt' , sep = '\t')

xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(3900,400),
ylim = c(0,0.15),
type = 'l',
col = NaCl[i])
par(new = T)
}
for(i in 1:40){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(3900,400),
ylim = c(0,0.12),
type = 'l',
col = NaCl[i])
par(new = T)
}
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.18),
type = 'l',
col = class[i])
par(new = T)
}
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.18),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.1),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.08),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1)
for(i in 1:3){
plot(wavenumber,
datat[index[[23]][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
Rango1 <- prom[,1:676]
wn.Rango1 <- wavenumber[1:676]
NaCl <- vector('character', length(rownames(prom)))
for(i in 1:40){
if(grepl('SS', rownames(prom)[i],perl =T)){NaCl[i]<- 'red'}
else{NaCl[i]<- 'black'}
}
indexSS <- vector('logical',40)
indexSS<-which(grepl('SS', rownames(prom),perl =T))
index[[23]]
rownames(prom)[23]
rownames(datat)[c(22,23,24)]
for(i in 1:3){
plot(wavenumber,
datat[index[[23]][i],],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,1),
type = 'l')
par(new = T)
}
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('Lower fraction','Upper fraction'),
col = c('red','black'),
lty = 1)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('water extraction','brine extraction'),
col = c('red','black'),
lty = 1)
rownames(corregido2)
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.06),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
# for (i in 1:31){
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
# }
# colnames(sg) <- colnames( savitzkyGolay(X = corregido2[1,]
#                         ,m = 2,
#                         p = 3,
#                         w = w2+1,
#                         delta.wav=2))
rownames(sg) <- rownames(corregido2)
win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-1e-04,1e-04),
type = 'l',
col = class[i])
par(new = T)
}
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
# for (i in 1:31){
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
# }
# colnames(sg) <- colnames( savitzkyGolay(X = corregido2[1,]
#                         ,m = 2,
#                         p = 3,
#                         w = w2+1,
#                         delta.wav=2))
rownames(sg) <- rownames(corregido2)
win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-1e-04,1e-04),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
# for (i in 1:31){
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
# }
# colnames(sg) <- colnames( savitzkyGolay(X = corregido2[1,]
#                         ,m = 2,
#                         p = 3,
#                         w = w2+1,
#                         delta.wav=2))
rownames(sg) <- rownames(corregido2)
win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-5e-05,5e-05),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
library(prospectr)
w2 <- 40
sg <- matrix(ncol = ncol(corregido2)-w2, nrow= nrow(corregido2))
sg <- as.data.frame(sg)
# for (i in 1:31){
sg<- savitzkyGolay(X = corregido2
,m = 2,
p = 3,
w = w2+1,
delta.wav=2)
# }
# colnames(sg) <- colnames( savitzkyGolay(X = corregido2[1,]
#                         ,m = 2,
#                         p = 3,
#                         w = w2+1,
#                         delta.wav=2))
rownames(sg) <- rownames(corregido2)
# win.graph()
for(i in 1:length(rownames(sg))){
plot(as.numeric(colnames(sg)),
sg[i,],
xlab = 'wave number cm-1',
ylab = '2nd derivative of abs',
xlim = c(1700,400),
ylim = c(-5e-05,5e-05),
type = 'l',
col = NaCl[i])
par(new = T)
}
legend('topleft',
c('50C Colombia SS','50C Colombia'),
col = c('red','black'),
lty = 1)
pca.bl.sg <- prcomp(sg, scale =F, center = T)
vp.bl.sg <- (pca.bl.sg$sdev)^2
varianza.bl.sg <- round(vp.bl.sg/sum(vp.bl.sg)*100, 2)
varianza.bl.sg
pca.bl.sg <- prcomp(sg, scale =T, center = T)
vp.bl.sg <- (pca.bl.sg$sdev)^2
varianza.bl.sg <- round(vp.bl.sg/sum(vp.bl.sg)*100, 2)
varianza.bl.sg
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.2d[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.2d[2]), '%'),
col = class
)
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
x  <- coord.bl.sg[,1]
y  <- coord.bl.sg[,2]
z  <- coord.bl.sg[,3]
x1 <- x[NaCl=='red']
y1 <- y[NaCl=='red']
z1 <- z[NaCl=='red']
x2 <- x[NaCl=='black']
y2 <- y[NaCl=='black']
z2 <- z[NaCl=='black']
x  <- coord.bl.sg[,1]
y  <- coord.bl.sg[,2]
z  <- coord.bl.sg[,3]
x1 <- x[NaCl=='red']
y1 <- y[NaCl=='red']
z1 <- z[NaCl=='red']
x2 <- x[NaCl=='black']
y2 <- y[NaCl=='black']
z2 <- z[NaCl=='black']
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
library(car)
ellipse(c(mean(x1),mean(y1)),
cov(cbind(x1,y1)),
radius= sqrt(qnorm(.95)),
col="red",
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
ellipse(c(mean(x2),mean(y2)),
cov(cbind(x2,y2)),
radius= sqrt(qnorm(.95)),
col="black",
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
x  <- coord.bl.sg[,1]
y  <- coord.bl.sg[,2]
z  <- coord.bl.sg[,3]
x1 <- x[NaCl=='red']
y1 <- y[NaCl=='red']
z1 <- z[NaCl=='red']
x2 <- x[NaCl=='black']
y2 <- y[NaCl=='black']
z2 <- z[NaCl=='black']
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
library(car)
ellipse(c(mean(x1),mean(y1)),
cov(cbind(x1,y1)),
radius= sqrt(qnorm(.95)),
col="red",
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
# ellipse(c(mean(x2),mean(y2)),
#         cov(cbind(x2,y2)),
#         radius= sqrt(qnorm(.95)),
#         col="black",
#         center.pch=FALSE,
#         add=TRUE,
#         # levels=0.95,
#         fill=TRUE,
#         lwd=0.8,
#
# )
x  <- coord.bl.sg[,1]
y  <- coord.bl.sg[,2]
z  <- coord.bl.sg[,3]
x1 <- x[NaCl=='red']
y1 <- y[NaCl=='red']
z1 <- z[NaCl=='red']
x2 <- x[NaCl=='black']
y2 <- y[NaCl=='black']
z2 <- z[NaCl=='black']
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
library(car)
ellipse(c(mean(x1),mean(y1)),
cov(cbind(x1,y1)),
radius= sqrt(qchisq(.95, df =2)),
col="red",
center.pch=FALSE,
add=TRUE,
# levels=0.95,
fill=TRUE,
lwd=0.8,
)
library(mdatools)
mdaPCA <-pca(corregido2, 5, center = TRUE, scale = TRUE)
summary(mdaPCA)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
win.graph()
plotScores(mdaPCA$res$cal, show.labels = TRUE)
plot(mdaPCA)
plot(mdaPCA, show.labels = T)
which(rownames(datat), grepl('(?=.*UF2 A)((?=.*UF1 A)',perl=T))
which( grepl('(?=.*UF2 A)((?=.*UF1 A)',rownames(datat),perl=T))
which( grepl('(?=.*UF2 A)((?=.*UF1 A)',rownames(datat),perl=T))
which( grepl('(?=.*UF2 A)(?=.*UF1 A)',rownames(datat),perl=T))
View(data2)
View(datat)
View(corregido2)
which( grepl('(?=.*UF2 A)',rownames(datat),perl=T))
grepl('(?=.*UF2 A)',rownames(datat),perl=T)
grepl('(?=.*UF2)',rownames(datat),perl=T)
text(coord.bl.sg[,1],
coord.bl.sg[,2],
rownames(coord.bl.sg))
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
text(coord.bl.sg[,1],
coord.bl.sg[,2],
rownames(coord.bl.sg))
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl
)
abline(h = 0, v= 0, lty = 2)
text(coord.bl.sg[,1],
coord.bl.sg[,2],
rownames(coord.bl.sg),
pos = 4,
cex = 0.5)
coord.bl.sg <- pca.bl.sg$x
plot(coord.bl.sg[,1],
coord.bl.sg[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl.sg[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl.sg[2]), '%'),
col = NaCl,
xlim = c(-20,90)
)
abline(h = 0, v= 0, lty = 2)
text(coord.bl.sg[,1],
coord.bl.sg[,2],
rownames(coord.bl.sg),
pos = 4,
cex = 0.5)

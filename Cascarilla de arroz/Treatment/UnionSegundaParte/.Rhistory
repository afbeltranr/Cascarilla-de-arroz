rownames(coord.bl),
perl = T))
)
}
indexpch <- vector('list',16)
for(i in 1:16){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*)'
) ,
rownames(coord.bl),
perl = T))
)
}
View(indexpch)
pch <- vector('numeric', length = length(rownames(coord.bl)))
indexpch <- vector('list',16)
for(i in 1:16){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(i in 1:length(rownames(coord.bl)) ) {
for( j in 1:4){
for(k in 1:2){
#
# names[i] <- c(times[j],temperatures[k])
if(grepl(paste0('(?=.*',temperatures[k],')(?=.*',times[j],')'),
rownames(coord.bl)[i],
perl = T
)
){pch[i] <- 1}else{}
}
}
}
pch <- vector('numeric', length = length(rownames(coord.bl)))
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(i in 1:length(rownames(coord.bl)) ) {
for( j in 1:4){
for(k in 1:2){
#
# names[i] <- c(times[j],temperatures[k])
if(grepl(paste0('(?=.*',temperatures[k],')(?=.*',times[j],')'),
rownames(coord.bl)[i],
perl = T
)
){pch[i] <- 1}else{}
}
}
}
pch <- vector('numeric', length = length(rownames(coord.bl)))
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(i in 1:length(rownames(coord.bl)) ) {
for( j in 1:4){
for(k in 1:2){
#
# names[i] <- c(times[j],temperatures[k])
if(grepl(paste0('(?=.*',temperatures[k],')(?=.*',times[j],')'),
rownames(coord.bl)[i],
perl = T
)
){pch[i] <- 1}else{}
}
}
}
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
View(indexpch)
View(indexpch)
for(j in 1:8){
pch[indexpch[[j]]] <- pcval[j]
}
pch <- vector('numeric', length = length(rownames(coord.bl)))
pchvalues <- c(21,1,24,2,22,0,23,5)
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(j in 1:8){
pch[indexpch[[j]]] <- pcvalues[j]
}
pch <- vector('numeric', length = length(rownames(coord.bl)))
pchvalues <- c(21,1,24,2,22,0,23,5)
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(j in 1:8){
pch[indexpch[[j]]] <- pchvalues[j]
}
plot(coord.bl[,1],
coord.bl[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
pch = pch
)
pcha <- vector('numeric', length = length(rownames(coord.bl)))
pchvalues <- c(21,1,24,2,22,0,23,5)
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(j in 1:8){
pcha[indexpch[[j]]] <- pchvalues[j]
}
plot(coord.bl[,1],
coord.bl[,2],
pch = 19,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
pch = pcha
)
plot(coord.bl[,1],
coord.bl[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
)
abline(h = 0, v = 0, lty= 2)
plot(coord.bl[,1],
coord.bl[,2],
pch = 21,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
)
abline(h = 0, v = 0, lty= 2)
pch <- vector('numeric', length = length(rownames(coord.bl)))
pchvalues <- c(16,1,17,2,15,0,18,5)
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(j in 1:8){
pch[indexpch[[j]]] <- pchvalues[j]
}
plot(coord.bl[,1],
coord.bl[,2],
pch = 21,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
)
abline(h = 0, v = 0, lty= 2)
plot(coord.bl[,1],
coord.bl[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class,
)
abline(h = 0, v = 0, lty= 2)
plot(coord.bl[,1],
coord.bl[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class
)
abline(h = 0, v = 0, lty= 2)
nombres <- list.files(, pattern = 'CSV')
nombres
48/3
data <- lapply(nombres, read.csv, header = FALSE)
str(data[[1]])
wavenumber <- data[[1]][,1]
data2 <- lapply(data, '[', 2)
data2 <- as.data.frame(data2)
dim(data2)
names(data2) <- nombres
datat <- t(data2)
colnames(datat) <- wavenumber
set.seed(0)
searchGrid <-  expand.grid(Temperature = c('Room T','50C'),
Time = c('2 min', '4 min' , '6 min', '8 min'),
Treatment =c('A','B'))
rownames.prom <- character(16)
for (i in 1:16){
rownames.prom[i] <- paste(searchGrid[i,1],searchGrid[i,2],searchGrid[i,3])
}
prom <- matrix(,
ncol= ncol(datat),
nrow = nrow(datat)/3)
index <- vector('list',16)
for(i in 1:16){
index[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')(?=.*',
as.character(searchGrid[i,3]),
')'
) ,
rownames(datat),
perl = T))
)
for(j in 1:length(colnames(datat))){
prom[i,j] <- mean(c(datat[index[[i]][1],j],
datat[index[[i]][2],j],
datat[index[[i]][3],j]
) )
}
}
rownames(prom) <- rownames.prom
colnames(prom) <- wavenumber
for(i in 1:length(rownames(prom))){
plot(wavenumber,
prom[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.18),
type = 'l')
par(new = T)
}
write.table(prom,'promedios2.txt', sep = '\t')
promedios1 <- read.table('promedios1.txt', sep = '\t', header = T)
dim(promedios1)
library(tibble)
promedios1 <- column_to_rownames(promedios1 , var = 'X')
dim(promedios1)
dim(prom)
colnames(promedios1) <- colnames(prom)
promediosTotal <- rbind(prom,promedios1)
promediosTotal <- promediosTotal[-1869]
Rango1 <- promediosTotal[,1:676]
wn.Rango1 <- wavenumber[1:676]
head(colnames(Rango1))
tail(colnames(Rango1))
write.table(Rango1, 'promediosCandi.txt', sep = '\t')
library(hyperSpec)
spc <- new('hyperSpec', spc = Rango1, wavelength = wn.Rango1)
bend <- 0.1 * wl.eval (spc, function (x) x^6+x^5+x^4+x^3+x^2, normalize.wl=normalize01)
bl <- spc.rubberband (spc+bend, noise = 1e-4, df=20)-bend
suma <- spc+bend
spc3 <- spc - bl
plot(spc, wl.reverse = TRUE)
plot(bl, add=TRUE, col=2,wl.reverse = TRUE)
plot(suma,wl.reverse = TRUE)
plot(bend, add=TRUE, col=2,wl.reverse = TRUE)
plot(spc3,wl.reverse = TRUE)
corregido <- as.data.frame(spc3[1:31])
corregido2 <- as.data.frame(corregido[,1])
for(i in 1:length(rownames(corregido2))){
plot(wn.Rango1,
corregido2[i,],
xlab = 'wave number cm-1',
ylab = 'absorbance a.u.',
xlim = c(1700,400),
ylim = c(0,0.18),
type = 'l')
par(new = T)
}
pca.bl <- prcomp(corregido2, scale =F, center = T)
vp.bl <- (pca.bl$sdev)^2
varianza.bl <- round(vp.bl/sum(vp.bl)*100, 2)
varianza.bl
coord.bl <- pca.bl$x
class <- vector('character', length = length(rownames(corregido2)))
str(class)
for(i in 1:length(rownames(coord.bl)))
{
if(
grepl('(?=.*@)', rownames(coord.bl)[i], perl = T)
) {class[i] <- 'black'}else{
class[i] <- 'red'
}
}
class
rownames(coord.bl)
pch <- vector('numeric', length = length(rownames(coord.bl)))
pchvalues <- c(16,1,17,2,15,0,18,5)
indexpch <- vector('list',8)
for(i in 1:8){
indexpch[[i]] <- c(which(grepl(paste0('(?=.*',
as.character(searchGrid[i,1]),
')(?=.*',
as.character(searchGrid[i,2]),
')'
) ,
rownames(coord.bl),
perl = T))
)
}
for(j in 1:8){
pch[indexpch[[j]]] <- pchvalues[j]
}
plot(coord.bl[,1],
coord.bl[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class
)
abline(h = 0, v = 0, lty= 2)
73828/25
200/4
100000/50
plot(coord.bl[,1],
coord.bl[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class
)
abline(h = 0, v = 0, lty= 2)
pca.bl.2d <- prcomp(sg, scale=T, center = T)
coord.bl.2d <- pca.bl.2d$x
plot(coord.bl.2d[,1],
coord.bl.2d[,2],
pch = pch,
xlab = paste('PC 1 -',as.character(varianza.bl[1]), '%'),
ylab = paste('PC 2 -',as.character(varianza.bl[2]), '%'),
col = class
)
abline(h = 0, v = 0, lty= 2)
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.5, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.005, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.01, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.1, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.01, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.07, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.05, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.05)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
library(rgl)
x  <- coord.bl[,1]
y  <- coord.bl[,2]
z  <- coord.bl[,3]
# here i make new vectors from the first 3 principal components in order to use them in graphical functions
rgl_init()
r3dDefaults$windowRect <- c(0,50, 1200, 1200)
rgl.spheres(x, y, z, r = 0.03, color =class)
rgl_add_axes(x, y, z, show.bbox = FALSE)
text3d(x,y+0.01,z, rownames(coord.bl), col="black", pos=3, cex = 0.07)
aspect3d(1,1,1)
# browseURL(
#   paste("file://", writeWebGL(dir=file.path(tempdir(), "webGL"),
#   width=800), sep="")
#   )
